--- data/before.graphql
+++ data/after.graphql
@@ -1,24 +1,20 @@
-"""All input for the create `MyTable` mutation."""
+"""All input for the `createMyTable` mutation."""
 input CreateMyTableInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-
-  """The `MyTable` to be created by this mutation."""
   myTable: MyTableInput!
 }
 
-"""The output of our create `MyTable` mutation."""
+"""The output of our `createMyTable` mutation."""
 type CreateMyTablePayload {
   """
   The exact same `clientMutationId` that was provided in the mutation input,
   unchanged and unused. May be used by a client to track mutations.
   """
   clientMutationId: String
-
-  """The `MyTable` that was created by this mutation."""
   myTable: MyTable
 
   """
@@ -52,31 +48,14 @@
   id: Int!
 }
 
-"""All input for the `deleteMyTable` mutation."""
-input DeleteMyTableInput {
-  """
-  An arbitrary string value with no semantic meaning. Will be included in the
-  payload verbatim. May be used to track mutations by the client.
-  """
-  clientMutationId: String
-
-  """
-  The globally unique `ID` which will identify a single `MyTable` to be deleted.
-  """
-  nodeId: ID!
-}
-
-"""The output of our delete `MyTable` mutation."""
-type DeleteMyTablePayload {
+"""The output of our `deleteMyTableById` mutation."""
+type DeleteMyTableByIdPayload {
   """
   The exact same `clientMutationId` that was provided in the mutation input,
   unchanged and unused. May be used by a client to track mutations.
   """
   clientMutationId: String
-
-  """The `MyTable` that was deleted by this mutation."""
   myTable: MyTable
-  deletedMyTableId: ID
 
   """
   Our root query field type. Allows us to run any query from our mutation payload.
@@ -94,45 +73,24 @@
 The root mutation type which contains root level fields which mutate data.
 """
 type Mutation {
-  """Creates a single `MyTable`."""
   createMyTable(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
     input: CreateMyTableInput!
   ): CreateMyTablePayload
-
-  """Updates a single `MyTable` using its globally unique id and a patch."""
-  updateMyTable(
+  deleteMyTableById(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateMyTableInput!
-  ): UpdateMyTablePayload
-
-  """Updates a single `MyTable` using a unique key and a patch."""
+    input: DeleteMyTableByIdInput!
+  ): DeleteMyTableByIdPayload
   updateMyTableById(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
     input: UpdateMyTableByIdInput!
-  ): UpdateMyTablePayload
-
-  """Deletes a single `MyTable` using its globally unique id."""
-  deleteMyTable(
-    """
-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
-    """
-    input: DeleteMyTableInput!
-  ): DeleteMyTablePayload
-
-  """Deletes a single `MyTable` using a unique key."""
-  deleteMyTableById(
-    """
-    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
-    """
-    input: DeleteMyTableByIdInput!
-  ): DeleteMyTablePayload
+  ): UpdateMyTableByIdPayload
 }
 
 type MyTable implements Node {
@@ -308,42 +266,17 @@
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-
-  """
-  An object where the defined keys will be set on the `MyTable` being updated.
-  """
   myTablePatch: MyTablePatch!
   id: Int!
 }
 
-"""All input for the `updateMyTable` mutation."""
-input UpdateMyTableInput {
-  """
-  An arbitrary string value with no semantic meaning. Will be included in the
-  payload verbatim. May be used to track mutations by the client.
-  """
-  clientMutationId: String
-
-  """
-  The globally unique `ID` which will identify a single `MyTable` to be updated.
-  """
-  nodeId: ID!
-
-  """
-  An object where the defined keys will be set on the `MyTable` being updated.
-  """
-  myTablePatch: MyTablePatch!
-}
-
-"""The output of our update `MyTable` mutation."""
-type UpdateMyTablePayload {
+"""The output of our `updateMyTableById` mutation."""
+type UpdateMyTableByIdPayload {
   """
   The exact same `clientMutationId` that was provided in the mutation input,
   unchanged and unused. May be used by a client to track mutations.
   """
   clientMutationId: String
-
-  """The `MyTable` that was updated by this mutation."""
   myTable: MyTable
 
   """
